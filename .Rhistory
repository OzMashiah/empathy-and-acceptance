rm(list = ls()) # remove all variables from environment
cat("\014") # clean console
# fix score flag
fix_score = TRUE
# import libraries
library(readr)
library(dplyr)
#set working directory
setwd("C:/Users/Oz/Documents/Empathy And Acceptance/empathy-and-acceptance/")
# read raw data files
beginning<-read_tsv('rawdata\\Beginning Survey_July 2, 2023_04.49.tsv', locale = locale(encoding = "UTF-16"))
ending<-readr::read_tsv("rawdata\\Ending Survey_July 2, 2023_04.49.tsv", locale = locale(encoding = "UTF-16"))
daily<-readr::read_tsv("rawdata\\daily survey_July 2, 2023_04.48.tsv", locale = locale(encoding = "UTF-16"))
# Remove duplicate ID except the first occurrence & people who did not finish.
beginning_clean <- beginning %>%
group_by(ID) %>%
filter(Progress == 100 & DistributionChannel == "anonymous") %>%
filter(row_number() == 1)
ending_clean <- ending %>%
group_by(ID) %>%
filter(Progress == 100 & DistributionChannel == "anonymous") %>%
filter(row_number() == 1)
daily_clean <- daily %>%
filter(DistributionChannel == "anonymous" & Progress == 100 &
(Q18_5 == 2 | is.na(Q18_5) | Q18_5 == "") &
(Q12_5 == 2 | is.na(Q12_5) | Q12_5 == ""))
# convert to numeric.
ending_clean <- ending_clean %>%
mutate(across(starts_with("Nonacceptance"), as.numeric))
beginning_clean <- beginning_clean %>%
mutate(across(starts_with("Nonacceptance"), as.numeric))
ending_clean <- ending_clean %>%
mutate(across(starts_with("EmpathicConcern"), as.numeric))
beginning_clean <- beginning_clean %>%
mutate(across(starts_with("EmpathicConcern"), as.numeric))
# Q12 (negative), Q18 (positive), Q2 (no-exposure)
daily_clean <- daily_clean %>%
mutate(across(starts_with("Q12"), as.numeric))
daily_clean <- daily_clean %>%
mutate(across(starts_with("Q18"), as.numeric))
daily_clean <- daily_clean %>%
mutate(across(starts_with("Q2"), as.numeric))
# Fix incorrect scoring in Male-IRI (beginning and ending) and No-Exposure (daily)
# IRI
if (fix_score) {
apply_rule_iri <- function(gender, col) {
if (gender == 2) {
col <- case_when(
col == 1 ~ 1,
col == 16 ~ 2,
col == 2 ~ 3,
col == 3 ~ 4,
col == 4 ~ 5,
TRUE ~ col
)
}
return(col)
}
columns_to_modify_iri <- grep("^EmpathicConcern", names(beginning_clean), value = TRUE)
beginning_clean <- beginning_clean %>%
mutate_at(vars(all_of(columns_to_modify_iri)), ~apply_rule_iri(Gender, .))
ending_clean <- ending_clean %>%
mutate_at(vars(all_of(columns_to_modify_iri)), ~apply_rule_iri(Gender, .))
# Daily
apply_rule_daily <- function(col) {
col <- case_when(
col == 2 ~ 1,
col == 3 ~ 2,
col == 4 ~ 3,
col == 5 ~ 4,
col == 6 ~ 5,
is.na(col) ~ NA_real_,
TRUE ~ col
)
return(col)
}
columns_to_modify_daily <- grep("^Q2", names(daily_clean), value = TRUE)
daily_clean <- daily_clean %>%
mutate_at(vars(all_of(columns_to_modify_daily)), ~apply_rule_daily(.))
fix_score = FALSE
}
# calculate the nonacceptance scale for the DERS questionnaire.
ending_ders <- ending_clean %>%
mutate(DERS_NA = (Nonacceptance_3 + Nonacceptance_4 + Nonacceptance_11 +
Nonacceptance_12 + Nonacceptance_13 + Nonacceptance_16)/6)
beginning_ders <- beginning_clean %>%
mutate(DERSNA = (Nonacceptance_3 + Nonacceptance_4 + Nonacceptance_11 +
Nonacceptance_12 + Nonacceptance_13 + Nonacceptance_16)/6)
# calculate the acceptance scale for the DERS questionnaire (inverse of nonacceptance)
ending_ders <- ending_ders %>%
mutate(DERS_A = (recode(Nonacceptance_3, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_4, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_11, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_12, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_13, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_16, `1` = 5, `2` = 4, `4` = 2, `5` = 1))/6)
beginning_ders <- beginning_ders %>%
mutate(DERS_A = (recode(Nonacceptance_3, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_4, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_11, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_12, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_13, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
recode(Nonacceptance_16, `1` = 5, `2` = 4, `4` = 2, `5` = 1))/6)
# IRI Questionnaire
# Perspective Taking: 3(3R), 8(8), 11(11), 15(15R), -(21), -(25), -(28)
ending_iri <- ending_ders %>%
mutate(IRI_PT = (recode(EmpathicConcern_3, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
EmpathicConcern_8 + EmpathicConcern_11 +
recode(EmpathicConcern_15, `1` = 5, `2` = 4, `4` = 2, `5` = 1))/4)
beginning_iri <- beginning_ders %>%
mutate(IRI_PT = (recode(EmpathicConcern_3, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
EmpathicConcern_8 + EmpathicConcern_11 +
recode(EmpathicConcern_15, `1` = 5, `2` = 4, `4` = 2, `5` = 1))/4)
# Fantasy Scale: 1(1), 5(5), 7(7R), 12(12R), 16(16), -(23), -(26)
ending_iri <- ending_iri %>%
mutate(IRI_FC = (recode(EmpathicConcern_7, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
EmpathicConcern_1 + EmpathicConcern_5 + EmpathicConcern_16 +
recode(EmpathicConcern_12, `1` = 5, `2` = 4, `4` = 2, `5` = 1))/5)
beginning_iri <- beginning_iri %>%
mutate(IRI_FC = (recode(EmpathicConcern_7, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
EmpathicConcern_1 + EmpathicConcern_5 + EmpathicConcern_16 +
recode(EmpathicConcern_12, `1` = 5, `2` = 4, `4` = 2, `5` = 1))/5)
# Emphatic Concern: 2(2), 4(4R only in ending), 9(9), 14(14), -(18R), -(20), -(22)
ending_iri <- ending_iri %>%
mutate(IRI_EC = (recode(EmpathicConcern_4, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
EmpathicConcern_2 + EmpathicConcern_9 + EmpathicConcern_14)/4)
beginning_iri <- beginning_iri %>%
mutate(IRI_EC = (EmpathicConcern_4 + EmpathicConcern_2 + EmpathicConcern_9 +
EmpathicConcern_14)/4)
# Personal Distress: 6(6), 10(10), 13(13R), -(17), -(19R), -(24), -(27)
ending_iri <- ending_iri %>%
mutate(IRI_PD = (recode(EmpathicConcern_13, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
EmpathicConcern_6 + EmpathicConcern_10)/3)
beginning_iri <- beginning_iri %>%
mutate(IRI_PD = (recode(EmpathicConcern_13, `1` = 5, `2` = 4, `4` = 2, `5` = 1) +
EmpathicConcern_6 + EmpathicConcern_10)/3)
# IRI Overall Sum
ending_iri <- ending_iri %>%
mutate(IRI_Total = (IRI_PT + IRI_FC + IRI_EC + IRI_PD)/4)
beginning_iri <- beginning_iri %>%
mutate(IRI_Total = (IRI_PT + IRI_FC + IRI_EC + IRI_PD)/4)
# Daily Negative Experience Questionnaire.
daily_scales <- daily_clean %>%
mutate(Negative_Total = (Q12_1 + Q12_2 + Q12_3 + Q12_4 + Q12_6 + Q12_7 + Q12_8)/7)
# Daily Positive Experience Questionnaire.
daily_scales <- daily_scales %>%
mutate(Positive_Total = (Q18_1 + Q18_2 + Q18_3 + Q18_4 + Q18_6 + Q18_7 + Q18_8)/7)
# Daily No Exposure Questionnaire.
daily_scales <- daily_scales %>%
mutate(NoExposure_Total = (Q2_1 + Q2_2 + Q2_3 + Q2_4 + Q2_5 + Q2_6 + Q2_7 +
Q2_8 + Q2_9 + Q2_10 + Q2_11 + Q2_12 + Q2_13 + Q2_14)/14)
# remove subjects that have not done the minimum requirements:
# 1. done the beginning survey.
# 2. at least 2 daily surveys.
# 3. done the ending survey
daily_twice_ids <- daily_scales %>%
group_by(ID) %>%
filter(n() >= 2) %>%
distinct(ID) %>%
pull(ID)
beginning_ending_ids <- beginning_iri %>%
semi_join(ending_iri, by = "ID") %>%
distinct(ID) %>%
pull(ID)
result_ids <- intersect(daily_twice_ids, beginning_ending_ids)
beginning_final <- beginning_iri %>%
filter(ID %in% result_ids)
ending_final <- ending_iri %>%
filter(ID %in% result_ids)
daily_final <- daily_scales %>%
filter(ID %in% result_ids)
# create a different row with reversed scores for negatively worded questions
# for cronbach's alpha.
ending_final <- ending_final %>%
mutate(EmpathicConcern_3_R = recode(EmpathicConcern_3, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
ending_final <- ending_final %>%
mutate(EmpathicConcern_4_R = recode(EmpathicConcern_4, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
ending_final <- ending_final %>%
mutate(EmpathicConcern_7_R = recode(EmpathicConcern_7, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
ending_final <- ending_final %>%
mutate(EmpathicConcern_12_R = recode(EmpathicConcern_12, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
ending_final <- ending_final %>%
mutate(EmpathicConcern_13_R = recode(EmpathicConcern_13, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
ending_final <- ending_final %>%
mutate(EmpathicConcern_15_R = recode(EmpathicConcern_15, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
beginning_final <- beginning_final %>%
mutate(EmpathicConcern_3_R = recode(EmpathicConcern_3, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
beginning_final <- beginning_final %>%
mutate(EmpathicConcern_7_R = recode(EmpathicConcern_7, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
beginning_final <- beginning_final %>%
mutate(EmpathicConcern_12_R = recode(EmpathicConcern_12, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
beginning_final <- beginning_final %>%
mutate(EmpathicConcern_13_R = recode(EmpathicConcern_13, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
beginning_final <- beginning_final %>%
mutate(EmpathicConcern_15_R = recode(EmpathicConcern_15, `1` = 5, `2` = 4, `4` = 2, `5` = 1))
beginning$Age
mean(beginning$Age)
mean(beginning_final$Age)
beginning_final$Age
mean(as.numeric(beginning_final$Age))
sd(as.numeric(beginning_final$Age))
rm(list = ls()) # remove all variables from environment
cat("\014") # clean console
# import libraries
library(ggplot2)
library(hrbrthemes)
library(gridExtra)
library(ggpubr)
library(tidyr)
library(ltm)
library(dplyr)
library(vtable)
library(PerformanceAnalytics)
# set working directory
setwd("C:/Users/Oz/Documents/Empathy And Acceptance/empathy-and-acceptance/")
# read preprocessed data files
beginning<-readr::read_csv('preprocessed\\preprocessed_beginning.csv')
ending<-readr::read_csv("preprocessed\\preprocessed_ending.csv")
daily<-readr::read_csv("preprocessed\\preprocessed_daily.csv")
# descriptive statistics for both questionnaires
combined_data_long <- rbind(mutate(beginning[, c('ID', 'DERS_A', 'IRI_PT',
'IRI_FC', 'IRI_EC', 'IRI_PD',
'IRI_Total')],
Group = "Beginning"),
mutate(ending[, c('ID', 'DERS_A', 'IRI_PT',
'IRI_FC', 'IRI_EC', 'IRI_PD',
'IRI_Total')],
Group = "Ending"))
st(combined_data_long[, c('DERS_A', 'IRI_PT', 'IRI_FC', 'IRI_EC', 'IRI_PD',
'IRI_Total', 'Group')],
group = 'Group',group.long = TRUE,
labels = c('Acceptance', 'Perspective Taking (PT)', 'Fantasy (FS)',
'Empathic Concern (EC)', 'Personal Distress (PD)', 'IRI Total'),
out = 'kable') %>%
kableExtra::kable_classic_2(full_width = F, html_font = "Cambria")
# Each subscale Cronbach's alpha
# maybe add the alpha to the table
# Perspective Taking: 3(3R), 8(8), 11(11), 15(15R), -(21), -(25), -(28)
alpha_iri_pt_beginning = cronbach.alpha(beginning[, c('EmpathicConcern_3_R',
'EmpathicConcern_8',
'EmpathicConcern_11',
'EmpathicConcern_15_R')])
alpha_iri_pt_ending = cronbach.alpha(ending[, c('EmpathicConcern_3_R',
'EmpathicConcern_8',
'EmpathicConcern_11',
'EmpathicConcern_15_R')])
# Fantasy Scale: 1(1), 5(5), 7(7R), 12(12R), 16(16), -(23), -(26)
alpha_iri_fs_beginning = cronbach.alpha(beginning[, c('EmpathicConcern_1',
'EmpathicConcern_5',
'EmpathicConcern_7_R',
'EmpathicConcern_12_R')])
alpha_iri_fs_ending = cronbach.alpha(ending[, c('EmpathicConcern_1',
'EmpathicConcern_5',
'EmpathicConcern_7_R',
'EmpathicConcern_12_R')])
# Emphatic Concern: 2(2), 4(4R only in ending), 9(9), 14(14), -(18R), -(20), -(22)
alpha_iri_ec_beginning = cronbach.alpha(beginning[, c('EmpathicConcern_2',
'EmpathicConcern_4',
'EmpathicConcern_9',
'EmpathicConcern_14')])
alpha_iri_ec_ending = cronbach.alpha(ending[, c('EmpathicConcern_2',
'EmpathicConcern_4_R',
'EmpathicConcern_9',
'EmpathicConcern_14')])
# Personal Distress: 6(6), 10(10), 13(13R), -(17), -(19R), -(24), -(27)
alpha_iri_pd_beginning = cronbach.alpha(beginning[, c('EmpathicConcern_6',
'EmpathicConcern_10',
'EmpathicConcern_13_R')])
alpha_iri_pd_ending = cronbach.alpha(ending[, c('EmpathicConcern_6',
'EmpathicConcern_10',
'EmpathicConcern_13_R')])
# Nonacceptance of emotional responses scale. 3(11), 4(12), 11(21), 12(23), 13(25), 16(29)
alpha_ders_a_beginning = cronbach.alpha(beginning[, c('Nonacceptance_3',
'Nonacceptance_4',
'Nonacceptance_11',
'Nonacceptance_12',
'Nonacceptance_13',
'Nonacceptance_16')])
alpha_ders_a_ending = cronbach.alpha(ending[, c('Nonacceptance_3',
'Nonacceptance_4',
'Nonacceptance_11',
'Nonacceptance_12',
'Nonacceptance_13',
'Nonacceptance_16')])
# correlation between empathic concern and acceptance
beginning_cor <- cor.test(beginning$IRI_EC, beginning$DERS_A)
ending_cor <- cor.test(ending$IRI_EC, ending$DERS_A)
# linear trend + confidence interval
# beginning
EC1A1 <- ggplot(beginning, aes(x=DERS_A, y=IRI_EC)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum() +
ggtitle("Beginning Questionnaire") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Acceptance") +
ylab("Empathic Concern") +
theme(axis.title.x = element_text(size=15 ,hjust=0.5)) +
theme(axis.title.y = element_text(size=15 ,hjust=0.5)) +
geom_text(aes(3.5, 6, label=paste("r = ", format(round(beginning_cor$estimate,
3), nsmall =3))), size = 7)
#ending
EC2A2 <- ggplot(ending, aes(x=DERS_A, y=IRI_EC)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum() +
ggtitle("Ending Questionnaire") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Acceptance") +
ylab("Empathic Concern") +
theme(axis.title.x = element_text(size=15 ,hjust=0.5)) +
theme(axis.title.y = element_text(size=15 ,hjust=0.5)) +
geom_text(aes(3.5, 6, label=paste("r = ", format(round(ending_cor$estimate,
3), nsmall =3))), size = 7)
grid.arrange(EC1A1, EC2A2, ncol = 2)
# t-test between before and after daily survey
# Combine dataframes
combined_data_wide <- left_join(beginning, ending, by = "ID", suffix = c("_beginning", "_ending")) %>%
dplyr::select(ID, IRI_EC_beginning, DERS_A_beginning, IRI_EC_ending, DERS_A_ending)
combined_data_long <- rbind(mutate(beginning[, c('ID', 'IRI_EC', 'DERS_A')], Group = "Beginning"),
mutate(ending[, c('ID', 'IRI_EC', 'DERS_A')], Group = "Ending"))
# Acceptance before after
t_test_A1A2 <- t.test(combined_data_wide$DERS_A_beginning,
combined_data_wide$DERS_A_ending, paired = TRUE)
A1A2 <- ggplot(combined_data_long, aes(x = Group, y = DERS_A, fill = Group)) +
geom_boxplot() +
labs(title = "Acceptance before and after Daily Journal",
x = "Group",
y = "Acceptance") +
theme_minimal() +
annotate("text",
x = 1.5, y = max(combined_data_long$DERS_A)-0.2,
label = paste("p-value:", format(format(round(t_test_A1A2$p.value,3),
nsmall = 3))),
hjust = 0.5, vjust = -0.5,
size = 4, color = "black")
# Empathy before after
t_test_EC1EC2 <- t.test(combined_data_wide$IRI_EC_beginning,
combined_data_wide$IRI_EC_ending, paired = TRUE)
EC1EC2 <- ggplot(combined_data_long, aes(x = Group, y = IRI_EC, fill = Group)) +
geom_boxplot() +
labs(title = "Empathic Concern before and after Daily Journal",
x = "Group",
y = "Empathic Concern") +
theme_minimal() +
annotate("text",
x = 1.5, y = max(combined_data_long$IRI_EC-0.2),
label = paste("p-value:", format(format(round(t_test_EC1EC2$p.value,3),
nsmall = 3))),
hjust = 0.5, vjust = -0.5,
size = 4, color = "black")
grid.arrange(EC1EC2, A1A2, ncol = 2)
# correlation matrix with all subscales for exploration
corrmatdf_beg <- beginning %>%
rename(
Perspective_Taking = IRI_PT,
Fantasy = IRI_FC,
Personal_Distress = IRI_PD,
Empathic_Concern = IRI_EC,
Acceptance = DERS_A
)
corrmatdf_end <- ending %>%
rename(
Perspective_Taking = IRI_PT,
Fantasy = IRI_FC,
Personal_Distress = IRI_PD,
Empathic_Concern = IRI_EC,
Acceptance = DERS_A
)
chart.Correlation(corrmatdf_beg[, c('Perspective_Taking', 'Fantasy',
'Personal_Distress', 'Empathic_Concern',
'Acceptance')], histogram=TRUE, pch=19)
chart.Correlation(corrmatdf_end[, c('Perspective_Taking', 'Fantasy',
'Personal_Distress', 'Empathic_Concern',
'Acceptance')], histogram=TRUE, pch=19)
# testing more analysis that didnt make it to the official work for now.
# ggpaired plot trying to beautify.
ordered_long <- combined_data_long %>%
arrange(Group, ID)
ggpaired(ordered_long, x = "Group", y = "IRI_EC",
order = c("Beginning", "Ending"),
ylab = "Empathic Concern", xlab = "Group")
ggpaired(ordered_long, x = "Group", y = "DERS_A",
order = c("Beginning", "Ending"),
ylab = "Acceptance", xlab = "Group")
# Trying to use ancova with covariate of amount of journals.
ancova_df <- daily[, c('ID')] %>%
group_by(ID)  %>%
summarise(count = n()) %>%
left_join(beginning[, c('ID', 'IRI_EC', 'DERS_A')], by = "ID") %>%
left_join(ending[, c('ID', 'IRI_EC', 'DERS_A')], by = "ID")
library(car)
ancova_model_ec <- aov(IRI_EC.x ~ count + IRI_EC.y, data = ancova_df)
Anova(ancova_model_ec, type="III")
ancova_model_a <- aov(DERS_A.x ~ count + DERS_A.y, data = ancova_df)
Anova(ancova_model_a, type="III")
View(ancova_df)
ancova_df$count %>%
count()
ancova_df$count
as.character(ancova_df$count)
as.character(ancova_df$count) %>%
count()
ancova_df$count %>%
group_by(count)
